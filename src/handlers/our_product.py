from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
import asyncio

from states import OurProductStates
from keyboards import (
    get_console_keyboard, 
    get_position_keyboard, 
    get_confirmation_keyboard, 
    get_cancel_keyboard,
    get_back_to_main_keyboard,
    get_cancel_and_back_keyboard,
    get_console_keyboard_with_back,
    get_main_menu_keyboard,
    get_payment_method_keyboard,
    get_final_confirmation_keyboard,
    get_back_to_main_after_sale_keyboard
)
from models import OurProductData, validate_amount
from services.google_sheets import GoogleSheetsService
from services.antilopay import AntilopayAPI
from services.payment_tracker import PaymentTracker
import logging

logger = logging.getLogger(__name__)

router = Router()


@router.callback_query(F.data == "our_product")
async def start_our_product(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞"""
    await state.set_state(OurProductStates.waiting_game_name)
    
    text = (
        "üéÆ <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_keyboard(),
        parse_mode="HTML"
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º message_id –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await state.update_data(bot_message_id=callback.message.message_id)
    await callback.answer()


@router.message(OurProductStates.waiting_game_name)
async def process_game_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–≥—Ä—ã"""
    await state.update_data(game_name=message.text)
    await state.set_state(OurProductStates.choosing_console)
    
    text = (
        "üß© <b>–í—ã–±–æ—Ä –∫–æ–Ω—Å–æ–ª–∏</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å:"
    )
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –±–æ—Ç–∞
    await message.delete()
    
    data = await state.get_data()
    try:
        await message.bot.edit_message_text(
            text=text,
            chat_id=message.chat.id,
            message_id=data['bot_message_id'],
            reply_markup=get_console_keyboard_with_back(),
            parse_mode="HTML"
        )
    except:
        sent_message = await message.answer(
            text, 
            reply_markup=get_console_keyboard_with_back(), 
            parse_mode="HTML"
        )
        await state.update_data(bot_message_id=sent_message.message_id)


@router.callback_query(F.data.startswith("console_"), OurProductStates.choosing_console)
async def process_console_choice(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω—Å–æ–ª–∏"""
    console = callback.data.split("_")[1]
    await state.update_data(console=console)
    await state.set_state(OurProductStates.choosing_position)
    
    text = (
        f"üéÆ <b>–í—ã–±–æ—Ä –ø–æ–∑–∏—Ü–∏–∏</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_position_keyboard(console),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "back_to_console", OurProductStates.choosing_position)
async def back_to_console(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–æ–Ω—Å–æ–ª–∏"""
    await state.set_state(OurProductStates.choosing_console)
    
    text = (
        "üß© <b>–í—ã–±–æ—Ä –∫–æ–Ω—Å–æ–ª–∏</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_console_keyboard_with_back(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data.startswith("position_"), OurProductStates.choosing_position)
async def process_position_choice(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏"""
    _, console, position = callback.data.split("_")
    await state.update_data(position=position)
    await state.set_state(OurProductStates.waiting_ps_login)
    
    text = (
        "üë§ <b>–õ–æ–≥–∏–Ω PS</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω PlayStation:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_and_back_keyboard("back_to_position"),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "back_to_position")
async def back_to_position(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –ø–æ–∑–∏—Ü–∏–∏"""
    data = await state.get_data()
    console = data.get('console')
    await state.set_state(OurProductStates.choosing_position)
    
    text = (
        f"üéÆ <b>–í—ã–±–æ—Ä –ø–æ–∑–∏—Ü–∏–∏</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_position_keyboard(console),
        parse_mode="HTML"
    )
    await callback.answer()


@router.message(OurProductStates.waiting_ps_login)
async def process_ps_login(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–æ–≥–∏–Ω–∞ PS"""
    await state.update_data(ps_login=message.text)
    await state.set_state(OurProductStates.waiting_comment)
    
    text = (
        "üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–ª–∏–¥, —Å—Å—ã–ª–∫–∞ –Ω–∞ –¥–∏–∞–ª–æ–≥):"
    )
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –±–æ—Ç–∞
    await message.delete()
    
    data = await state.get_data()
    try:
        await message.bot.edit_message_text(
            text=text,
            chat_id=message.chat.id,
            message_id=data['bot_message_id'],
            reply_markup=get_cancel_and_back_keyboard("back_to_ps_login"),
            parse_mode="HTML"
        )
    except:
        sent_message = await message.answer(
            text, 
            reply_markup=get_cancel_and_back_keyboard("back_to_ps_login"), 
            parse_mode="HTML"
        )
        await state.update_data(bot_message_id=sent_message.message_id)


@router.callback_query(F.data == "back_to_ps_login")
async def back_to_ps_login(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤–≤–æ–¥—É PS –ª–æ–≥–∏–Ω–∞"""
    await state.set_state(OurProductStates.waiting_ps_login)
    
    text = (
        "üë§ <b>–õ–æ–≥–∏–Ω PS</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω PlayStation:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_and_back_keyboard("back_to_position"),
        parse_mode="HTML"
    )
    await callback.answer()


@router.message(OurProductStates.waiting_comment)
async def process_comment(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""
    await state.update_data(comment=message.text)
    await state.set_state(OurProductStates.waiting_amount)
    
    text = (
        "üí∞ <b>–°—É–º–º–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:"
    )
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –±–æ—Ç–∞
    await message.delete()
    
    data = await state.get_data()
    try:
        await message.bot.edit_message_text(
            text=text,
            chat_id=message.chat.id,
            message_id=data['bot_message_id'],
            reply_markup=get_cancel_and_back_keyboard("back_to_comment"),
            parse_mode="HTML"
        )
    except:
        sent_message = await message.answer(
            text, 
            reply_markup=get_cancel_and_back_keyboard("back_to_comment"), 
            parse_mode="HTML"
        )
        await state.update_data(bot_message_id=sent_message.message_id)


@router.callback_query(F.data == "back_to_comment")
async def back_to_comment(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤–≤–æ–¥—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""
    await state.set_state(OurProductStates.waiting_comment)
    
    text = (
        "üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–ª–∏–¥, —Å—Å—ã–ª–∫–∞ –Ω–∞ –¥–∏–∞–ª–æ–≥):"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_and_back_keyboard("back_to_ps_login"),
        parse_mode="HTML"
    )
    await callback.answer()


@router.message(OurProductStates.waiting_amount)
async def process_amount(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—É–º–º—ã –∏ –ø–æ–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    try:
        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—É–º–º—É
        amount = validate_amount(message.text)
        
        await state.update_data(amount=amount)
        await state.set_state(OurProductStates.confirmation)
        
        data = await state.get_data()
        
        confirmation_text = (
            "‚úÖ <b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ:</b>\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"üéÆ <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:</b> {data['game_name']}\n\n"
            f"üß© <b>–ö–æ–Ω—Å–æ–ª—å:</b> {data['console']}\n\n"
            f"üìç <b>–ü–æ–∑–∏—Ü–∏—è:</b> {data['position']}\n\n"
            f"üë§ <b>–õ–æ–≥–∏–Ω PS:</b> {data['ps_login']}\n\n"
            f"üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data['comment']}\n\n"
            f"üí∞ <b>–°—É–º–º–∞:</b> {amount:.2f} ‚ÇΩ\n"
        )
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –±–æ—Ç–∞
        await message.delete()
        
        try:
            await message.bot.edit_message_text(
                text=confirmation_text,
                chat_id=message.chat.id,
                message_id=data['bot_message_id'],
                reply_markup=get_confirmation_keyboard(),
                parse_mode="HTML"
            )
        except:
            sent_message = await message.answer(
                confirmation_text,
                reply_markup=get_confirmation_keyboard(),
                parse_mode="HTML"
            )
            await state.update_data(bot_message_id=sent_message.message_id)
        
    except ValueError as e:
        error_text = (
            f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {str(e)}\n\n"
            "üí∞ –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1000 –∏–ª–∏ 1500.50):"
        )
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –±–æ—Ç–∞
        await message.delete()
        
        data = await state.get_data()
        try:
            await message.bot.edit_message_text(
                text=error_text,
                chat_id=message.chat.id,
                message_id=data['bot_message_id'],
                reply_markup=get_cancel_and_back_keyboard("back_to_comment"),
                parse_mode="HTML"
            )
        except:
            sent_message = await message.answer(
                error_text, 
                reply_markup=get_cancel_and_back_keyboard("back_to_comment"), 
                parse_mode="HTML"
            )
            await state.update_data(bot_message_id=sent_message.message_id)


@router.callback_query(F.data == "cancel")
async def cancel_operation(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏"""
    await state.clear()
    
    text = (
        "‚ùå <b>–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n\n"
        "üßëüèø‚Äçü¶Ω‚Äç‚û°Ô∏è <b>Hello PS Store x Antilopay</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–¥–∞–∂–∏:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_main_menu_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")


@router.callback_query(F.data == "confirm", OurProductStates.confirmation)
async def confirm_our_product(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã"""
    data = await state.get_data()
    
    try:
        amount = float(data['amount'])
    except (ValueError, KeyError):
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.",
            reply_markup=get_back_to_main_keyboard()
        )
        await state.clear()
        return

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
    await state.set_state(OurProductStates.payment_method_selection)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
    payment_text = (
        "‚úÖ <b>–î–∞–Ω–Ω—ã–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã!</b>\n"
        "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üéÆ <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:</b> {data['game_name']}\n\n"
        f"üß© <b>–ö–æ–Ω—Å–æ–ª—å:</b> {data['console']}\n\n"
        f"üìç <b>–ü–æ–∑–∏—Ü–∏—è:</b> {data['position']}\n\n"
        f"üë§ <b>–õ–æ–≥–∏–Ω PS:</b> {data['ps_login']}\n\n"
        f"üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data['comment']}\n\n"
        f"üí∞ <b>–°—É–º–º–∞:</b> {amount:.2f} ‚ÇΩ\n"
        "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        "üí≤ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b>"
    )
    
    await callback.message.edit_text(
        payment_text,
        reply_markup=get_payment_method_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "edit", OurProductStates.confirmation)
async def edit_our_product(callback: CallbackQuery, state: FSMContext):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞"""
    await state.set_state(OurProductStates.waiting_amount)
    
    text = (
        "üí∞ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_and_back_keyboard("back_to_comment"),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data.startswith("payment_"), OurProductStates.payment_method_selection)
async def process_payment_method(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é"""
    data = await state.get_data()
    payment_method = callback.data.replace("payment_", "")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
    await state.update_data(payment_method=payment_method)
    await state.set_state(OurProductStates.final_confirmation)
    
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –∫–æ–¥ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
    payment_names = {
        "CARD_RU": "üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞",
        "SBER_PAY": "üü¢ SberPay", 
        "SBP": "‚ö° –°–ë–ü"
    }
    payment_display = payment_names.get(payment_method, payment_method)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    final_text = (
        "üí≤ <b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!</b>\n"
        "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üéÆ <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:</b> {data['game_name']}\n\n"
        f"üß© <b>–ö–æ–Ω—Å–æ–ª—å:</b> {data['console']}\n\n"
        f"üìç <b>–ü–æ–∑–∏—Ü–∏—è:</b> {data['position']}\n\n"
        f"üë§ <b>–õ–æ–≥–∏–Ω PS:</b> {data['ps_login']}\n\n"
        f"üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data['comment']}\n\n"
        f"üí∞ <b>–°—É–º–º–∞:</b> {data['amount']:.2f} ‚ÇΩ\n\n"
        f"üí≤ <b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b> {payment_display}\n"
        "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        "üîó <b>–ü–æ–ª—É—á–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É</b>"
    )
    
    await callback.message.edit_text(
        final_text,
        reply_markup=get_final_confirmation_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "get_payment_link", OurProductStates.final_confirmation)
async def get_payment_link(callback: CallbackQuery, state: FSMContext):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É"""
    data = await state.get_data()
    
    try:
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–∞–Ω–Ω—ã—Ö
        product_data = OurProductData(
            game_name=data['game_name'],
            console=data['console'],
            position=data['position'],
            ps_login=data['ps_login'],
            comment=data['comment'],
            amount=data['amount'],
            user_id=callback.from_user.id,
            username=callback.from_user.username
        )
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ (–∑–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ)
        await callback.message.edit_text(
            "‚è≥ <b>–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞...</b>\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.",
            parse_mode="HTML"
        )
        await callback.answer()
        
        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ Antilopay API
        antilopay = AntilopayAPI()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã
        payment_method = data.get('payment_method')
        prefer_methods = [payment_method] if payment_method else None
        
        # –°–æ–∑–¥–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
        description = "–ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–∞"
        
        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂
        payment_result = antilopay.create_payment(
            amount=product_data.amount,
            product_name=product_data.game_name,
            client_login=product_data.ps_login,
            description=description,
            prefer_methods=prefer_methods
        )
        
        if payment_result and payment_result.get("success"):
            payment_url = payment_result.get("payment_url")
            payment_id = payment_result.get("payment_id")
            order_id = payment_result.get("order_id")
            
            # –ü–µ—Ä–µ–≤–æ–¥–∏–º –∫–æ–¥ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            payment_names = {
                "CARD_RU": "üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞",
                "SBER_PAY": "üü¢ SberPay", 
                "SBP": "‚ö° –°–ë–ü"
            }
            payment_display = payment_names.get(data['payment_method'], data['payment_method'])
            
            success_text = (
                "‚úÖ <b>–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!</b>\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"üéÆ <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:</b> {data['game_name']}\n\n"
                f"üß© <b>–ö–æ–Ω—Å–æ–ª—å:</b> {data['console']}\n\n"
                f"üìç <b>–ü–æ–∑–∏—Ü–∏—è:</b> {data['position']}\n\n"
                f"üë§ <b>–õ–æ–≥–∏–Ω PS:</b> {data['ps_login']}\n\n"
                f"üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data['comment']}\n\n"
                f"üí∞ <b>–°—É–º–º–∞:</b> {product_data.amount:.2f} ‚ÇΩ\n\n"
                f"üí≤ <b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b> {payment_display}\n\n"
                f"üÜî <b>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</b> <code>{order_id}</code>\n\n"
                f"üÜî <b>–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–ª–∞—Ç–µ–∂–∞:</b> <code>{payment_id}</code>\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"üîó <b>–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É:</b>\n{payment_url}\n\n"
                "üì§ –°—Å—ã–ª–∫–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç—É\n\n"
                "‚è≥ –û–ø–ª–∞—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç"
            )
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞..." –∏ —Å–æ–∑–¥–∞–µ–º –ù–û–í–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            try:
                await callback.message.delete()
            except:
                pass
            
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=success_text,
                reply_markup=get_back_to_main_after_sale_keyboard(),
                parse_mode="HTML",
                disable_web_page_preview=True
            )
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
            tracker = PaymentTracker(callback.bot)
            asyncio.create_task(
                tracker.track_payment(
                    order_id=order_id,
                    payment_id=payment_id,
                    sale_data=product_data,  # –ü–µ—Ä–µ–¥–∞–µ–º OurProductData
                    chat_id=callback.message.chat.id,
                    payment_display=payment_display,
                    user_telegram_login=callback.from_user.username
                )
            )
            
            logger.info(f"–°–æ–∑–¥–∞–Ω –ø–ª–∞—Ç–µ–∂ {payment_id} (Order: {order_id}) –Ω–∞ —Å—É–º–º—É {product_data.amount} ‚ÇΩ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ {product_data.game_name}")
            
        else:
            # –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
            error_message = payment_result.get("error", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞") if payment_result else "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API"
            
            error_text = (
                "‚ùå <b>–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞</b>\n\n"
                f"üí∞ <b>–°—É–º–º–∞:</b> {product_data.amount:.2f} ‚ÇΩ\n"
                f"‚ùó <b>–û—à–∏–±–∫–∞:</b> {error_message}\n\n"
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
            
            # –î–ª—è –æ—à–∏–±–æ–∫ —Ç–æ–∂–µ —É–¥–∞–ª—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ
            try:
                await callback.message.delete()
            except:
                pass
            
            await callback.bot.send_message(
                chat_id=callback.message.chat.id,
                text=error_text,
                reply_markup=get_back_to_main_after_sale_keyboard(),
                parse_mode="HTML"
            )
            
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞: {error_message}")
        
        await state.clear()
        
    except Exception as e:
        # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
        try:
            await callback.message.delete()
        except:
            pass
        
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞: {e}")
        import traceback
        logger.error(f"–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞: {traceback.format_exc()}")
        
        error_text = (
            "‚ùå <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞</b>\n\n"
            f"üí∞ <b>–°—É–º–º–∞:</b> {data.get('amount', 0):.2f} ‚ÇΩ\n"
            "‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n"
            "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        
        await callback.bot.send_message(
            chat_id=callback.message.chat.id,
            text=error_text,
            reply_markup=get_back_to_main_after_sale_keyboard(),
            parse_mode="HTML"
        )
        
        await state.clear()


@router.callback_query(F.data == "back_to_payment_method", OurProductStates.final_confirmation)
async def back_to_payment_method(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã"""
    data = await state.get_data()
    await state.set_state(OurProductStates.payment_method_selection)
    
    payment_text = (
        "‚úÖ <b>–î–∞–Ω–Ω—ã–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã!</b>\n"
        "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üéÆ <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:</b> {data['game_name']}\n\n"
        f"üß© <b>–ö–æ–Ω—Å–æ–ª—å:</b> {data['console']}\n\n"
        f"üìç <b>–ü–æ–∑–∏—Ü–∏—è:</b> {data['position']}\n\n"
        f"üë§ <b>–õ–æ–≥–∏–Ω PS:</b> {data['ps_login']}\n\n"
        f"üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data['comment']}\n\n"
        f"üí∞ <b>–°—É–º–º–∞:</b> {data['amount']:.2f} ‚ÇΩ\n"
        "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        "üí≤ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b>"
    )
    
    await callback.message.edit_text(
        payment_text,
        reply_markup=get_payment_method_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–≥—Ä—ã
@router.callback_query(F.data == "back_to_game_name")
async def back_to_game_name(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤–≤–æ–¥—É –Ω–∞–∑–≤–∞–Ω–∏—è –∏–≥—Ä—ã"""
    await state.set_state(OurProductStates.waiting_game_name)
    
    text = (
        "üéÆ <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "back_to_main")
async def back_to_main_menu(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (—Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)"""
    await state.clear()
    
    text = (
        "üßëüèø‚Äçü¶Ω‚Äç‚û°Ô∏è <b>Hello PS Store x Antilopay</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–¥–∞–∂–∏:"
    )
    
    await callback.message.answer(
        text,
        reply_markup=get_main_menu_keyboard(),
        parse_mode="HTML"
    )
    
    await callback.answer() 