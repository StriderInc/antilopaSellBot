from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from states import OurProductStates
from keyboards import (
    get_console_keyboard, 
    get_position_keyboard, 
    get_confirmation_keyboard, 
    get_cancel_keyboard,
    get_back_to_main_keyboard,
    get_cancel_and_back_keyboard,
    get_console_keyboard_with_back
)
from models import OurProductData, validate_amount
from services.google_sheets import GoogleSheetsService

router = Router()


@router.callback_query(F.data == "our_product")
async def start_our_product(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞"""
    await state.set_state(OurProductStates.waiting_game_name)
    
    text = (
        "üéÆ <b>–ü—Ä–æ–¥–∞–∂–∞ –Ω–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.message(OurProductStates.waiting_game_name)
async def process_game_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–≥—Ä—ã"""
    await state.update_data(game_name=message.text)
    await state.set_state(OurProductStates.choosing_console)
    
    text = (
        "üß© <b>–í—ã–±–æ—Ä –ø–æ–∑–∏—Ü–∏–∏</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å:"
    )
    
    await message.answer(
        text,
        reply_markup=get_console_keyboard_with_back(),
        parse_mode="HTML"
    )


@router.callback_query(F.data.startswith("console_"), OurProductStates.choosing_console)
async def process_console_choice(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω—Å–æ–ª–∏"""
    console = callback.data.split("_")[1]
    await state.update_data(console=console)
    await state.set_state(OurProductStates.choosing_position)
    
    text = (
        f"üéÆ <b>–ö–æ–Ω—Å–æ–ª—å: {console}</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_position_keyboard(console),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "back_to_console", OurProductStates.choosing_position)
async def back_to_console(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–æ–Ω—Å–æ–ª–∏"""
    await state.set_state(OurProductStates.choosing_console)
    
    text = (
        "üß© <b>–í—ã–±–æ—Ä –ø–æ–∑–∏—Ü–∏–∏</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_console_keyboard_with_back(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data.startswith("position_"), OurProductStates.choosing_position)
async def process_position_choice(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏"""
    _, console, position = callback.data.split("_")
    await state.update_data(position=position)
    await state.set_state(OurProductStates.waiting_ps_login)
    
    text = (
        "üë§ <b>–õ–æ–≥–∏–Ω PS</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω PlayStation:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_and_back_keyboard("back_to_position"),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "back_to_position")
async def back_to_position(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –ø–æ–∑–∏—Ü–∏–∏"""
    data = await state.get_data()
    console = data.get('console')
    await state.set_state(OurProductStates.choosing_position)
    
    text = (
        f"üéÆ <b>–ö–æ–Ω—Å–æ–ª—å: {console}</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_position_keyboard(console),
        parse_mode="HTML"
    )
    await callback.answer()


@router.message(OurProductStates.waiting_ps_login)
async def process_ps_login(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–æ–≥–∏–Ω–∞ PS"""
    await state.update_data(ps_login=message.text)
    await state.set_state(OurProductStates.waiting_comment)
    
    text = (
        "üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–ª–∏–¥, —Å—Å—ã–ª–∫–∞ –Ω–∞ –¥–∏–∞–ª–æ–≥):"
    )
    
    await message.answer(
        text, 
        reply_markup=get_cancel_and_back_keyboard("back_to_ps_login"), 
        parse_mode="HTML"
    )


@router.callback_query(F.data == "back_to_ps_login")
async def back_to_ps_login(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤–≤–æ–¥—É PS –ª–æ–≥–∏–Ω–∞"""
    await state.set_state(OurProductStates.waiting_ps_login)
    
    text = (
        "üë§ <b>–õ–æ–≥–∏–Ω PS</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω PlayStation:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_and_back_keyboard("back_to_position"),
        parse_mode="HTML"
    )
    await callback.answer()


@router.message(OurProductStates.waiting_comment)
async def process_comment(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""
    await state.update_data(comment=message.text)
    await state.set_state(OurProductStates.waiting_amount)
    
    text = (
        "üí∞ <b>–°—É–º–º–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:"
    )
    
    await message.answer(
        text, 
        reply_markup=get_cancel_and_back_keyboard("back_to_comment"), 
        parse_mode="HTML"
    )


@router.callback_query(F.data == "back_to_comment")
async def back_to_comment(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤–≤–æ–¥—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""
    await state.set_state(OurProductStates.waiting_comment)
    
    text = (
        "üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–ª–∏–¥, —Å—Å—ã–ª–∫–∞ –Ω–∞ –¥–∏–∞–ª–æ–≥):"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_and_back_keyboard("back_to_ps_login"),
        parse_mode="HTML"
    )
    await callback.answer()


@router.message(OurProductStates.waiting_amount)
async def process_amount(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—É–º–º—ã –∏ –ø–æ–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    try:
        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—É–º–º—É
        amount = validate_amount(message.text)
        
        await state.update_data(amount=amount)
        await state.set_state(OurProductStates.confirmation)
        
        data = await state.get_data()
        
        confirmation_text = (
            "‚úÖ <b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ:</b>\n"
            f"----------------------------------------\n"
            f"üéÆ <b>–ò–≥—Ä–∞:</b> {data['game_name']}\n\n"
            f"üß© <b>–ö–æ–Ω—Å–æ–ª—å:</b> {data['console']}\n\n"
            f"üìç <b>–ü–æ–∑–∏—Ü–∏—è:</b> {data['position']}\n\n"
            f"üë§ <b>–õ–æ–≥–∏–Ω PS:</b> {data['ps_login']}\n\n"
            f"üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data['comment']}\n\n"
            f"üí∞ <b>–°—É–º–º–∞:</b> {amount:.2f} ‚ÇΩ\n"
        )
        
        await message.answer(
            confirmation_text,
            reply_markup=get_confirmation_keyboard(),
            parse_mode="HTML"
        )
        
    except ValueError as e:
        error_text = (
            f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {str(e)}\n\n"
            "üí∞ –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1000 –∏–ª–∏ 1500.50):"
        )
        await message.answer(
            error_text, 
            reply_markup=get_cancel_and_back_keyboard("back_to_comment"), 
            parse_mode="HTML"
        )


@router.callback_query(F.data == "back_to_amount")
async def back_to_amount(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤–≤–æ–¥—É —Å—É–º–º—ã"""
    await state.set_state(OurProductStates.waiting_amount)
    
    text = (
        "üí∞ <b>–°—É–º–º–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_and_back_keyboard("back_to_comment"),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "confirm", OurProductStates.confirmation)
async def confirm_our_product(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞"""
    data = await state.get_data()
    
    try:
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–∞–Ω–Ω—ã—Ö
        product_data = OurProductData(
            game_name=data['game_name'],
            console=data['console'],
            position=data['position'],
            ps_login=data['ps_login'],
            comment=data['comment'],
            amount=data['amount'],  # –¢–µ–ø–µ—Ä—å —ç—Ç–æ —É–∂–µ float
            user_id=callback.from_user.id,
            username=callback.from_user.username
        )
        
        # –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Sheets
        sheets_service = GoogleSheetsService()
        success = sheets_service.add_product_sale_record(
            game_name=product_data.game_name,
            console=product_data.console,
            position=product_data.position,
            ps_login=product_data.ps_login,
            comment=product_data.comment,
            amount=product_data.amount,
            timestamp=product_data.created_at
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É
        if success:
            success_text = (
                "‚úÖ <b>–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!</b>\n\n"
                f"üí∞ <b>–°—É–º–º–∞:</b> {product_data.amount:.2f} ‚ÇΩ\n"
                "–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n"
                "‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É."
            )
        else:
            success_text = (
                "‚ö†Ô∏è <b>–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º</b>\n\n"
                f"üí∞ <b>–°—É–º–º–∞:</b> {product_data.amount:.2f} ‚ÇΩ\n"
                "–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n"
                "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É."
            )
        
        await callback.message.edit_text(
            success_text,
            reply_markup=get_back_to_main_keyboard(),
            parse_mode="HTML"
        )
        await callback.answer()
        await state.clear()
        
    except ValueError as e:
        error_text = f"‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:</b> {str(e)}"
        await callback.message.edit_text(
            error_text,
            reply_markup=get_back_to_main_keyboard(),
            parse_mode="HTML"
        )
        await callback.answer()


@router.callback_query(F.data == "edit", OurProductStates.confirmation)
async def edit_our_product(callback: CallbackQuery, state: FSMContext):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞"""
    await state.set_state(OurProductStates.waiting_amount)
    
    text = (
        "üí∞ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_and_back_keyboard("back_to_comment"),
        parse_mode="HTML"
    )
    await callback.answer()


# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–≥—Ä—ã
@router.callback_query(F.data == "back_to_game_name")
async def back_to_game_name(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤–≤–æ–¥—É –Ω–∞–∑–≤–∞–Ω–∏—è –∏–≥—Ä—ã"""
    await state.set_state(OurProductStates.waiting_game_name)
    
    text = (
        "üéÆ <b>–ü—Ä–æ–¥–∞–∂–∞ –Ω–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer() 