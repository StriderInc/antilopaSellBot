from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from states import FreeSaleStates
from keyboards import get_confirmation_keyboard, get_cancel_keyboard, get_back_to_main_keyboard, get_cancel_and_back_keyboard
from models import FreeSaleData, validate_amount
from services.google_sheets import GoogleSheetsService

router = Router()


@router.callback_query(F.data == "free_sale")
async def start_free_sale(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–≤–æ–±–æ–¥–Ω–æ–π –ø—Ä–æ–¥–∞–∂–∏"""
    await state.set_state(FreeSaleStates.waiting_service_name)
    
    text = (
        "üìù <b>–°–≤–æ–±–æ–¥–Ω–∞—è –ø—Ä–æ–¥–∞–∂–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.message(FreeSaleStates.waiting_service_name)
async def process_service_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∏"""
    await state.update_data(service_name=message.text)
    await state.set_state(FreeSaleStates.waiting_client_login)
    
    text = (
        "üë§ <b>–õ–æ–≥–∏–Ω –∫–ª–∏–µ–Ω—Ç–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∫–ª–∏–µ–Ω—Ç–∞:"
    )
    
    await message.answer(
        text, 
        reply_markup=get_cancel_and_back_keyboard("back_to_service_name"), 
        parse_mode="HTML"
    )


@router.callback_query(F.data == "back_to_service_name")
async def back_to_service_name(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤–≤–æ–¥—É –Ω–∞–∑–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∏"""
    await state.set_state(FreeSaleStates.waiting_service_name)
    
    text = (
        "üìù <b>–°–≤–æ–±–æ–¥–Ω–∞—è –ø—Ä–æ–¥–∞–∂–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.message(FreeSaleStates.waiting_client_login)
async def process_client_login(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–æ–≥–∏–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞"""
    await state.update_data(client_login=message.text)
    await state.set_state(FreeSaleStates.waiting_comment)
    
    text = (
        "üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–ª–∏–¥, —Å—Å—ã–ª–∫–∞ –Ω–∞ –¥–∏–∞–ª–æ–≥):"
    )
    
    await message.answer(
        text, 
        reply_markup=get_cancel_and_back_keyboard("back_to_client_login"), 
        parse_mode="HTML"
    )


@router.callback_query(F.data == "back_to_client_login")
async def back_to_client_login(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤–≤–æ–¥—É –ª–æ–≥–∏–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞"""
    await state.set_state(FreeSaleStates.waiting_client_login)
    
    text = (
        "üë§ <b>–õ–æ–≥–∏–Ω –∫–ª–∏–µ–Ω—Ç–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∫–ª–∏–µ–Ω—Ç–∞:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_and_back_keyboard("back_to_service_name"),
        parse_mode="HTML"
    )
    await callback.answer()


@router.message(FreeSaleStates.waiting_comment)
async def process_comment(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""
    await state.update_data(comment=message.text)
    await state.set_state(FreeSaleStates.waiting_amount)
    
    text = (
        "üí∞ <b>–°—É–º–º–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:"
    )
    
    await message.answer(
        text, 
        reply_markup=get_cancel_and_back_keyboard("back_to_comment"), 
        parse_mode="HTML"
    )


@router.callback_query(F.data == "back_to_comment")
async def back_to_comment(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤–≤–æ–¥—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""
    await state.set_state(FreeSaleStates.waiting_comment)
    
    text = (
        "üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–ª–∏–¥, —Å—Å—ã–ª–∫–∞ –Ω–∞ –¥–∏–∞–ª–æ–≥):"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_and_back_keyboard("back_to_client_login"),
        parse_mode="HTML"
    )
    await callback.answer()


@router.message(FreeSaleStates.waiting_amount)
async def process_amount(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—É–º–º—ã –∏ –ø–æ–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    try:
        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—É–º–º—É
        amount = validate_amount(message.text)
        
        await state.update_data(amount=amount)
        await state.set_state(FreeSaleStates.confirmation)
        
        data = await state.get_data()
        
        confirmation_text = (
            "‚úÖ <b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ:</b>\n"
            f"----------------------------------------\n"
            f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {data['service_name']}\n\n"
            f"üë§ <b>–õ–æ–≥–∏–Ω:</b> {data['client_login']}\n\n"
            f"üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {data['comment']}\n\n"
            f"üí∞ <b>–°—É–º–º–∞:</b> {amount:.2f} ‚ÇΩ\n"
        )
        
        await message.answer(
            confirmation_text,
            reply_markup=get_confirmation_keyboard(),
            parse_mode="HTML"
        )
        
    except ValueError as e:
        error_text = (
            f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {str(e)}\n\n"
            "üí∞ –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1000 –∏–ª–∏ 1500.50):"
        )
        await message.answer(
            error_text, 
            reply_markup=get_cancel_and_back_keyboard("back_to_comment"), 
            parse_mode="HTML"
        )


@router.callback_query(F.data == "cancel")
async def cancel_operation(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏"""
    await state.clear()
    
    text = (
        "‚ùå <b>–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n\n"
        "ü§ñ <b>Hello Bot x Antilopay</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–¥–∞–∂–∏:"
    )
    
    from keyboards import get_main_menu_keyboard
    await callback.message.edit_text(
        text,
        reply_markup=get_main_menu_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")


@router.callback_query(F.data == "confirm", FreeSaleStates.confirmation)
async def confirm_free_sale(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ–π –ø—Ä–æ–¥–∞–∂–∏"""
    data = await state.get_data()
    
    try:
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–∞–Ω–Ω—ã—Ö
        sale_data = FreeSaleData(
            service_name=data['service_name'],
            client_login=data['client_login'],
            comment=data['comment'],
            amount=data['amount'],  # –¢–µ–ø–µ—Ä—å —ç—Ç–æ —É–∂–µ float
            user_id=callback.from_user.id,
            username=callback.from_user.username
        )
        
        # TODO: –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Antilopay API –∏ Google Sheets
        
        sheets_service = GoogleSheetsService()
        success = sheets_service.add_free_sale_record(
            service_name=sale_data.service_name,
            client_login=sale_data.client_login,
            comment=sale_data.comment,
            amount=sale_data.amount,
            timestamp=sale_data.created_at
        )
        
        if success:
            success_text = (
                "‚úÖ <b>–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!</b>\n\n"
            f"üí∞ <b>–°—É–º–º–∞:</b> {sale_data.amount:.2f} ‚ÇΩ\n"
                "–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n"
                "–î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É."
            )
        else:
            success_text = (
                "‚ö†Ô∏è <b>–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º</b>\n\n"
                f"üí∞ <b>–°—É–º–º–∞:</b> {sale_data.amount:.2f} ‚ÇΩ\n"
                "–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n"
                "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É."
            )
        await callback.message.edit_text(
            success_text,
            reply_markup=get_back_to_main_keyboard(),
            parse_mode="HTML"
        )
        await callback.answer()
        await state.clear()
        
    except ValueError as e:
        error_text = f"‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:</b> {str(e)}"
        await callback.message.edit_text(
            error_text,
            reply_markup=get_back_to_main_keyboard(),
            parse_mode="HTML"
        )
        await callback.answer()


@router.callback_query(F.data == "edit", FreeSaleStates.confirmation)
async def edit_free_sale(callback: CallbackQuery, state: FSMContext):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–≤–æ–±–æ–¥–Ω–æ–π –ø—Ä–æ–¥–∞–∂–∏"""
    await state.set_state(FreeSaleStates.waiting_amount)
    
    text = (
        "üí∞ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_cancel_and_back_keyboard("back_to_comment"),
        parse_mode="HTML"
    )
    await callback.answer() 