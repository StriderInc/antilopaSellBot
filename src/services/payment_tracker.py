"""
–°–µ—Ä–≤–∏—Å –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–µ–π
"""

import asyncio
import logging
from typing import Dict, Any, Union
from aiogram import Bot

from services.antilopay import AntilopayAPI
from services.google_sheets import GoogleSheetsService
from models import FreeSaleData, OurProductData
from keyboards import get_back_to_main_after_sale_keyboard

logger = logging.getLogger(__name__)


class PaymentTracker:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–µ–π"""
    
    def __init__(self, bot: Bot):
        self.bot = bot
        self.antilopay = AntilopayAPI()
        self.sheets_service = GoogleSheetsService()
    
    async def track_payment(self, order_id: str, payment_id: str, 
                          sale_data: Union[FreeSaleData, OurProductData], chat_id: int, 
                          payment_display: str, user_telegram_login: str):
        """
        –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç
        """
        logger.info(f"–ù–∞—á–∞—Ç–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ {payment_id} (Order: {order_id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç (20 –ø–æ–ø—ã—Ç–æ–∫)
        max_attempts = 20
        check_interval = 30  # —Å–µ–∫—É–Ω–¥
        
        for attempt in range(max_attempts):
            try:
                await asyncio.sleep(check_interval)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
                status_result = self.antilopay.check_payment_status(order_id)
                
                if not status_result.get("success"):
                    logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ {payment_id}: {status_result.get('error')}")
                    continue
                
                status = status_result.get("status")

                logger.info(f"–°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ {payment_id}: {status} (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_attempts})")
                
                if status == "SUCCESS":
                    # –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω
                    await self._handle_successful_payment(
                        order_id, payment_id, sale_data, chat_id, 
                        payment_display, status_result, user_telegram_login
                    )
                    return
                
                elif status in ["FAIL", "CANCEL", "EXPIRED"]:
                    # –ü–ª–∞—Ç–µ–∂ –Ω–µ —É–¥–∞–ª—Å—è
                    await self._handle_failed_payment(
                        order_id, payment_id, chat_id, status
                    )
                    return
                
                # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å PENDING - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ {payment_id}: {e}")
        
        # –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ
        await self._handle_timeout_payment(order_id, payment_id, chat_id)
    
    async def _handle_successful_payment(self, order_id: str, payment_id: str,
                                       sale_data: Union[FreeSaleData, OurProductData], chat_id: int,
                                       payment_display: str, status_result: Dict[str, Any], user_telegram_login: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"""
        try:
            amount_received = status_result.get("amount", sale_data.amount)
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ç–∞–±–ª–∏—Ü—É
            if isinstance(sale_data, FreeSaleData):
                sheets_success = self.sheets_service.add_free_sale_record(
                    service_name=sale_data.service_name,
                    client_login=sale_data.client_login,
                    comment=sale_data.comment,
                    amount=amount_received,
                    timestamp=sale_data.created_at,
                    user_telegram_login=user_telegram_login,
                    order_id=order_id
                )
                product_info = f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:</b> {sale_data.service_name}\n\nüë§ <b>–õ–æ–≥–∏–Ω –∫–ª–∏–µ–Ω—Ç–∞:</b> {sale_data.client_login}"
                
            elif isinstance(sale_data, OurProductData):
                sheets_success = self.sheets_service.add_product_sale_record(
                    game_name=sale_data.game_name,
                    console=sale_data.console,
                    position=sale_data.position,
                    ps_login=sale_data.ps_login,
                    comment=sale_data.comment,
                    amount=sale_data.amount,
                    timestamp=sale_data.created_at,
                    user_telegram_login=user_telegram_login,
                    order_id=order_id
                )
                product_info = (
                    f"üéÆ <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:</b> {sale_data.game_name}\n\n"
                    f"üß© <b>–ö–æ–Ω—Å–æ–ª—å:</b> {sale_data.console}\n\n"
                    f"üìç <b>–ü–æ–∑–∏—Ü–∏—è:</b> {sale_data.position}\n\n"
                    f"üë§ <b>PS Login:</b> {sale_data.ps_login}\n\n"
                    f"üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {sale_data.comment}\n"
                )

            
            # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–ø–ª–∞—Ç–µ
            pay_method = status_result.get("pay_method", "")
            pay_data = status_result.get("pay_data", "")
            fee = status_result.get("fee", 0)
            
            success_message = (
                "üíô <b>–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω!</b>\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"{product_info}\n\n"
                f"üí∞ <b>–°—É–º–º–∞:</b> {sale_data.amount:.2f} ‚ÇΩ\n\n"
                f"üí∏ <b>–ö–æ–º–∏—Å—Å–∏—è:</b> {fee:.2f} ‚ÇΩ\n\n"
                f"üí≥ <b>–ü–æ–ª—É—á–µ–Ω–æ:</b> {amount_received:.2f} ‚ÇΩ\n\n"
                f"üí≤ <b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b> {payment_display}\n\n"
                f"üÜî <b>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</b> <code>{order_id}</code>\n\n"
                f"üÜî <b>–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–ª–∞—Ç–µ–∂–∞:</b> <code>{payment_id}</code>\n"
            )
            
            if pay_method and pay_data:
                success_message += f"\nüí≥ <b>–ú–µ—Ç–æ–¥:</b> {pay_method} ({pay_data})\n"
            
            success_message += (
                f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n{'‚òëÔ∏è –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É.' if sheets_success else '‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É.'}\n\n"
                "üìä –ó–∞–∫–∞–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ."
            )
            
            await self.bot.send_message(
                chat_id=chat_id,
                text=success_message,
                reply_markup=get_back_to_main_after_sale_keyboard(),
                parse_mode="HTML"
            )
            
            logger.info(f"–ü–ª–∞—Ç–µ–∂ {payment_id} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ –∑–∞–ø–∏—Å–∞–Ω –≤ —Ç–∞–±–ª–∏—Ü—É")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ {payment_id}: {e}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            error_message = (
                "‚ö†Ô∏è <b>–ü–ª–∞—Ç–µ–∂ –æ–ø–ª–∞—á–µ–Ω, –Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è</b>\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                f"üÜî <b>Payment ID:</b> <code>{payment_id}</code>\n\n"
                f"üí∞ <b>–°—É–º–º–∞:</b> {sale_data.amount:.2f} ‚ÇΩ\n\n"
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É."
            )
            
            await self.bot.send_message(
                chat_id=chat_id,
                text=error_message,
                parse_mode="HTML"
            )
    
    async def _handle_failed_payment(self, order_id: str, payment_id: str,
                                   chat_id: int, status: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"""
        status_messages = {
            "FAIL": "‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –±—ã–ª –æ–ø–ª–∞—á–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏",
            "CANCEL": "üö´ –ü–ª–∞—Ç–µ–∂ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º",
            "EXPIRED": "‚è∞ –í—Ä–µ–º—è –æ–ø–ª–∞—Ç—ã –∏—Å—Ç–µ–∫–ª–æ"
        }
        
        message = status_messages.get(status, f"‚ùå –ü–ª–∞—Ç–µ–∂ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: {status}")
        
        fail_message = (
            f"{message}\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"üÜî <b>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</b> <code>{order_id}</code>\n\n"
            f"üÜî <b>–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–ª–∞—Ç–µ–∂–∞:</b> <code>{payment_id}</code>\n\n"

            "–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂."
        )
        
        await self.bot.send_message(
            chat_id=chat_id,
            text=fail_message,
            parse_mode="HTML"
        )
        
        logger.info(f"–ü–ª–∞—Ç–µ–∂ {payment_id} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –Ω–µ—É–¥–∞—á–Ω–æ: {status}")
    
    async def _handle_timeout_payment(self, order_id: str, payment_id: str, chat_id: int):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è"""
        timeout_message = (
            "‚è∞ <b>–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ–ø–ª–∞—Ç—ã –∏—Å—Ç–µ–∫–ª–æ</b>\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"üÜî <b>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</b> <code>{order_id}</code>\n\n"
            f"üÜî <b>–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–ª–∞—Ç–µ–∂–∞:</b> <code>{payment_id}</code>\n\n"

            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –≤—Ä—É—á–Ω—É—é –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π."
        )
        
        await self.bot.send_message(
            chat_id=chat_id,
            text=timeout_message,
            parse_mode="HTML"
        )
        
        logger.warning(f"–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ {payment_id} –∏—Å—Ç–µ–∫–ª–æ") 